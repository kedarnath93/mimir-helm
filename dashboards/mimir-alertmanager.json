{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "100px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 1,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 4,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(cluster_job_pod:cortex_alertmanager_alerts:sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Total alerts",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 2,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 4,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(cluster_job_pod:cortex_alertmanager_silences:sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Total silences",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 3,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 4,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "max(cortex_alertmanager_tenants_discovered{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Tenants",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Headlines",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 4,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "QPS",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 5,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.99, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_native"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_native"
                     },
                     {
                        "expr": "(1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}) /\nsum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_classic"
                     },
                     {
                        "expr": "(1e3 * sum(histogram_sum(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) /\nsum(histogram_count(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_native"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Alertmanager Distributor",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 6,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "sum(cluster_job:cortex_alertmanager_alerts_received_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n-\n(sum(cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}) or vector(0))\n",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "APS",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Alerts received",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "cortex_alertmanager_dispatcher_aggregation_groups{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "per pod Active Aggregation Groups",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Alerts grouping",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 8,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n-\nsum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "NPS",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawSty{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Per-instance runs\nNumber of times a compactor instance triggers a compaction across all tenants that it manages.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "bars",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "completed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "started"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#34CCEB",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 1,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_compactor_runs_started_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "started",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_compactor_runs_completed_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "completed",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_compactor_runs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Per-instance runs / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Tenants compaction progress\nIn a multi-tenant cluster, display the progress of tenants that are compacted while compaction is running.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "noValue": 1,
                        "unit": "percentunit"
                     }
                  },
                  "id": 2,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "(\n  cortex_compactor_tenants_processing_succeeded{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"} +\n  cortex_compactor_tenants_processing_failed{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"} +\n  cortex_compactor_tenants_skipped{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}\n)\n/\ncortex_compactor_tenants_discovered{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"} > 0\n",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Tenants compaction progress",
                  "type": "timeseries"
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Longest time since last successful run\nDisplays the amount of time since the most recent successful execution\nof the compactor.\nThe value shown will be for the compactor replica that has the longest time since its\nlast successful run.\nThe table to the right shows a summary for all compactor replicas.\n\nIf there is no time value, one of the following messages might appear:\n\n- If you see \"No compactor data\" in this panel, that means that no compactors are active yet.\n\n- If you see \"No successful runs\" in this panel, that means that compactors are active, but none\n  of them were successfully executed yet.\n\nThese might be expected - for example, if you just recently restarted your compactors,\nthey might not have had a chance to complete their first compaction run.\nHowever, if these messages persist, you should check the health of your compactors.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "color": {
                           "mode": "thresholds"
                        },
                        "decimals": 1,
                        "noValue": "No compactor data",
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Last run"
                           },
                           "properties": [
                              {
                                 "id": "custom.width",
                                 "value": 74
                              },
                              {
                                 "id": "mappings",
                                 "value": [
                                    {
                                       "options": {
                                          "from": "-Infinity",
                                          "result": {
                                             "color": "text",
                                             "text": "No successful runs since startup yet"
                                          },
                                          "to": 0
                                       },
                                       "type": "range"
                                    }
                                 ]
                              },
                              {
                                 "id": "color",
                                 "value": {
                                    "mode": "thresholds"
                                 }
                              },
                              {
                                 "id": "thresholds",
                                 "value": {
                                    "mode": "absolute",
                                    "steps": [
                                       {
                                          "color": "green",
                                          "value": 0
                                       },
                                       {
                                          "color": "yellow",
                                          "value": 7200
                                       },
                                       {
                                          "color": "orange",
                                          "value": 21600
                                       },
                                       {
                                          "color": "red",
                                          "value": 43200
                                       }
                                    ]
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 3,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "reduceOptions": {
                        "calcs": [
                           "first"
                        ],
                        "fields": "/^Last run$/",
                        "values": false
                     },
                     "textMode": "value"
                  },
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 3,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "max by(pod)\n(\n  (time() * (max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h]) !=bool 0))\n  -\n  max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h])\n)\n",
                        "format": "table",
                        "instant": true,
                        "interval": "",
                        "intervalFactor": null,
                        "legendFormat": "",
                        "legendLink": null,
                        "step": null
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Longest time since last successful run",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transformations": [
                     {
                        "id": "organize",
                        "options": {
                           "renameByName": {
                              "Value": "Last run",
                              "pod": "Compactor"
                           }
                        }
                     },
                     {
                        "id": "sortBy",
                        "options": {
                           "sort": [
                              {
                                 "desc": true,
                                 "field": "Last run"
                              }
                           ]
                        }
                     }
                  ],
                  "type": "stat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Last successful run per-compactor replica\nDisplays the compactor replicas, and for each, shows how long it has been since\nits last successful compaction run.\n\nThe value in the status column is based on how long it has been since the last successful compaction.\n\n- Okay: less than 2 hours\n- Delayed: more than 2 hours\n- Late: more than 6 hours\n- Very late: more than 12 hours\n\nIf the status of any compactor replicas are *Late* or *Very late*, check their health.\n\n",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Status"
                           },
                           "properties": [
                              {
                                 "id": "custom.displayMode",
                                 "value": "color-background"
                              },
                              {
                                 "id": "mappings",
                                 "value": [
                                    {
                                       "options": {
                                          "from": "-Infinity",
                                          "result": {
                                             "color": "transparent",
                                             "text": "N/A"
                                          },
                                          "to": 0
                                       },
                                       "type": "range"
                                    },
                                    {
                                       "options": {
                                          "from": 0,
                                          "result": {
                                             "color": "green",
                                             "text": "Ok"
                                          },
                                          "to": 7200
                                       },
                                       "type": "range"
                                    },
                                    {
                                       "options": {
                                          "from": 7200,
                                          "result": {
                                             "color": "yellow",
                                             "text": "Delayed"
                                          },
                                          "to": 21600
                                       },
                                       "type": "range"
                                    },
                                    {
                                       "options": {
                                          "from": 21600,
                                          "result": {
                                             "color": "orange",
                                             "text": "Late"
                                          },
                                          "to": 43200
                                       },
                                       "type": "range"
                                    },
                                    {
                                       "options": {
                                          "from": 43200,
                                          "result": {
                                             "color": "red",
                                             "text": "Very late"
                                          },
                                          "to": "Infinity"
                                       },
                                       "type": "range"
                                    },
                                    {
                                       "options": {
                                          "match": "null+nan",
                                          "result": {
                                             "color": "transparent",
                                             "text": "Unknown"
                                          }
                                       },
                                       "type": "special"
                                    }
                                 ]
                              },
                              {
                                 "id": "custom.width",
                                 "value": 86
                              },
                              {
                                 "id": "custom.align",
                                 "value": "center"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Last run"
                           },
                           "properties": [
                              {
                                 "id": "unit",
                                 "value": "s"
                              },
                              {
                                 "id": "custom.width",
                                 "value": 74
                              },
                              {
                                 "id": "mappings",
                                 "value": [
                                    {
                                       "options": {
                                          "from": "-Infinity",
                                          "result": {
                                             "text": "Never"
                                          },
                                          "to": 0
                                       },
                                       "type": "range"
                                    }
                                 ]
                              }
                           ]
                        }
                     ]
                  },
                  "id": 4,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "max by(pod)\n(\n  (time() * (max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h]) !=bool 0))\n  -\n  max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h])\n)\n",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "Last run",
                        "legendLink": null
                     }
                  ],
                  "title": "Last successful run per-compactor replica",
                  "transformations": [
                     {
                        "id": "organize",
                        "options": {
                           "renameByName": {
                              "Value": "Last run",
                              "pod": "Compactor"
                           }
                        }
                     },
                     {
                        "id": "sortBy",
                        "options": {
                           "sort": [
                              {
                                 "desc": true,
                                 "field": "Last run"
                              }
                           ]
                        }
                     },
                     {
                        "id": "calculateField",
                        "options": {
                           "alias": "One",
                           "binary": {
                              "left": "Last run",
                              "operator": "/",
                              "right": "Last run"
                           },
                           "mode": "binary",
                           "replaceFields": false
                        }
                     },
                     {
                        "id": "calculateField",
                        "options": {
                           "alias": "Status",
                           "binary": {
                              "left": "Last run",
                              "operator": "*",
                              "right": "One"
                           },
                           "mode": "binary",
                           "replaceFields": false
                        }
                     },
                     {
                        "id": "filterFieldsByName",
                        "options": {
                           "include": {
                              "names": [
                                 "Compactor",
                                 "Last run",
                                 "Status"
                              ]
                           }
                        }
                     }
                  ],
                  "type": "table"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Summary",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Estimated Compaction Jobs\nEstimated number of compaction jobs based on latest version of bucket index. Ingesters upload new blocks every 2 hours (shortly after 01:00 UTC, 03:00 UTC, 05:00 UTC, etc.),\nand compactors should process all of them within 2h interval. If this graph regularly goes to zero (or close to zero) in 2 hour intervals, then compaction works as designed.\n\nMetric with number of compaction jobs is computed from blocks in bucket index, which is updated regularly. Metric doesn't change between bucket index updates, even if\nthere were compaction jobs finished in this time. When computing compaction jobs, only jobs that can be executed at given moment are counted. There can be more\njobs, but if they are blocked, they are not counted in the metric. For example if there is a split compaction job pending for some time range, no merge job\ncovering the same time range can run. In this case only split compaction job is counted toward the metric, but merge job isn't.\n\nIn other words, computed number of compaction jobs is the minimum number of compaction jobs based on latest version of bucket index.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 5,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}) and (sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) == 0)",
                        "format": "time_series",
                        "legendFormat": "Jobs",
                        "legendLink": null
                     }
                  ],
                  "title": "Estimated Compaction Jobs",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Source blocks age\nThe difference between the maximum timestamp of the block being compacted and the current time.\nA steadily increasing value indicates that the compactor cannot keep up with the produced blocks by the ingesters.\nIncrease the number of compactors when this value is consistently increasing.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 6,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_compactor_block_max_time_delta_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_compactor_block_max_time_delta_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_compactor_block_max_time_delta_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_compactor_block_max_time_delta_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Source blocks age",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### TSDB compactions / sec\nRate of TSDB compactions. Single TSDB compaction takes one or more input blocks and produces one or more (during \"split\" phase) output blocks.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(prometheus_tsdb_compactions_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "compactions",
                        "legendLink": null
                     }
                  ],
                  "title": "TSDB compactions / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### TSDB compaction duration\nDisplay the amount of time that it has taken to run a single TSDB compaction.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(prometheus_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(prometheus_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(prometheus_tsdb_compaction_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(prometheus_tsdb_compaction_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "TSDB compaction duration",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 9,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "avg(max by(user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}))",
                        "format": "time_series",
                        "legendFormat": "avg",
                        "legendLink": null
                     }
                  ],
                  "title": "Average blocks / tenant",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Tenants with largest number of blocks\nThe 10 tenants with the largest number of blocks.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 10,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "topk(10, max by(user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}))",
                        "format": "time_series",
                        "legendFormat": "{{user}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Tenants with largest number of blocks",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 11,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_compactor_blocks_marked_for_deletion_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "blocks",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks marked for deletion / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 12,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_compactor_blocks_cleaned_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_compactor_block_cleanup_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks deletions / sec",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Garbage collector",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 13,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_compactor_meta_syncs_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_compactor_meta_sync_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_compactor_meta_sync_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Metadata syncs / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 14,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_compactor_meta_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_compactor_meta_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_compactor_meta_sync_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_compactor_meta_sync_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Metadata sync duration",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Metadata sync",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 15,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Operations / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "min": 0,
                        "noValue": "0",
                        "unit": "percentunit"
                     }
                  },
                  "id": 16,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval])) >= 0",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Error rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 17,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Attributes",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 18,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Exists",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Object Store",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 19,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Get",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 20,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: GetRange",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 21,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Upload",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 22,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Delete",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 23,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 24,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Key-value store for compactors ring",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Compactor",
      "uid": "1b3443aea86db629e6efdb7d05c53823",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 1,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by(component) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{component}}",
                        "legendLink": null
                     }
                  ],
                  "title": "RPS / component",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "min": 0,
                        "noValue": "0",
                        "unit": "percentunit"
                     }
                  },
                  "id": 2,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by(component) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) / sum by(component) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) >= 0",
                        "format": "time_series",
                        "legendFormat": "{{component}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Error rate / component",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Components",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 3,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "RPS / operation",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "min": 0,
                        "noValue": "0",
                        "unit": "percentunit"
                     }
                  },
                  "id": 4,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) >= 0",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Error rate / operation",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Operations",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 5,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Op: Get",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 6,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Op: GetRange",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 7,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Op: Exists",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Op: Attributes",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 9,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Op: Upload",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 10,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Op: Delete",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Object Store",
      "uid": "e1324ee2a434f4158c00a9ee279d3292",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "",
      "rows": [
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "${datasource}",
                  "id": 1,
                  "span": 12,
                  "targets": [
                     {
                        "expr": "max by(limit_name) (cortex_limits_defaults{cluster=~\"$cluster\",namespace=~\"$namespace\"})",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "title": "Defaults",
                  "transformations": [
                     {
                        "id": "labelsToFields",
                        "options": { }
                     },
                     {
                        "id": "merge",
                        "options": { }
                     },
                     {
                        "id": "organize",
                        "options": {
                           "excludeByName": {
                              "Time": true
                           },
                           "indexByName": {
                              "Value": 1,
                              "limit_name": 0
                           }
                        }
                     },
                     {
                        "id": "sortBy",
                        "options": {
                           "fields": { },
                           "sort": [
                              {
                                 "field": "limit_name"
                              }
                           ]
                        }
                     }
                  ],
                  "type": "table"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "${datasource}",
                  "id": 2,
                  "span": 12,
                  "targets": [
                     {
                        "expr": "max by(user, limit_name) (cortex_limits_overrides{cluster=~\"$cluster\",namespace=~\"$namespace\",user=~\"${tenant_id}\"})",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "title": "Per-tenant overrides",
                  "transformations": [
                     {
                        "id": "labelsToFields",
                        "options": {
                           "mode": "columns",
                           "valueLabel": "limit_name"
                        }
                     },
                     {
                        "id": "merge",
                        "options": { }
                     },
                     {
                        "id": "organize",
                        "options": {
                           "excludeByName": {
                              "Time": true
                           },
                           "indexByName": {
                              "user": 0
                           }
                        }
                     }
                  ],
                  "type": "table"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".*",
               "current": {
                  "text": "prod",
                  "value": "prod"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": false,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": null,
               "current": {
                  "text": "prod",
                  "value": "prod"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": false,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": ".*",
                  "value": ".*"
               },
               "hide": 0,
               "label": "Tenant ID",
               "name": "tenant_id",
               "options": [
                  {
                     "selected": true,
                     "text": ".*",
                     "value": ".*"
                  }
               ],
               "query": ".*",
               "type": "textbox"
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Overrides",
      "uid": "1e2c358600ac53f09faea133f811b5bb",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Queue duration\n<p>\nThe query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\nIf the query-scheduler is deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_query_frontend_queue_duration_seconds_sum{$read_path_matcher}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_frontend_queue_duration_seconds_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Queue duration",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 2,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_query_frontend_retries_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_query_frontend_retries_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_query_frontend_retries_sum{$read_path_matcher}[$__rate_interval])) * 1 / sum(rate(cortex_query_frontend_retries_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Retries",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Queue length\n<p>\nThe query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\nIf the query-scheduler is deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 3,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(pod) (cortex_query_frontend_queue_length{$read_path_matcher})",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Queue length (per pod)",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Queue length\n<p>\nThe query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\nIf the query-scheduler is deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": "0",
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 4,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(user) (cortex_query_frontend_queue_length{$read_path_matcher}) > 0",
                        "format": "time_series",
                        "legendFormat": "{{user}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Queue length (per user)",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-frontend",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Queue duration\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 5,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{$read_path_matcher}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Queue duration",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Queue length\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 6,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(pod) (cortex_query_scheduler_queue_length{$read_path_matcher})",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Queue length (per pod)",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Queue length\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": "0",
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(user) (cortex_query_scheduler_queue_length{$read_path_matcher}) > 0",
                        "format": "time_series",
                        "legendFormat": "{{user}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Queue length (per user)",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-scheduler",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Intervals per query\nThe average number of split queries (partitioned by time) executed a single input query.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_frontend_split_queries_total{$read_path_matcher}[$__rate_interval])) / sum(rate(cortex_frontend_query_range_duration_seconds_count{$read_path_matcher, method=\"split_by_interval_and_results_cache\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "splitting rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Intervals per query",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 9,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "# Query the new metric introduced in Mimir 2.10.\n(\n  sum by(request_type) (rate(cortex_frontend_query_result_cache_hits_total{$read_path_matcher}[$__rate_interval]))\n  /\n  sum by(request_type) (rate(cortex_frontend_query_result_cache_requests_total{$read_path_matcher}[$__rate_interval]))\n)\n# Otherwise fallback to the previous general-purpose metrics.\nor\n(\n  label_replace(\n    sum (\n      rate(thanos_cache_hits_total{name=\"frontend-cache\", $read_path_matcher}[$__rate_interval])\n    )\n    /\n    sum (\n      rate(thanos_cache_requests_total{name=~\"frontend-cache\", $read_path_matcher}[$__rate_interval])\n    ),\n    \"request_type\", \"query_range\", \"\", \"\")\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{request_type}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Query results cache hit ratio",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Query results cache skipped\nThe % of queries whose results could not be cached.\nIt is tracked for each split query when the splitting by interval is enabled.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 10,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_frontend_query_result_cache_skipped_total{$read_path_matcher}[$__rate_interval])) by (reason) /\nignoring (reason) group_left sum(rate(cortex_frontend_query_result_cache_attempted_total{$read_path_matcher}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "{{reason}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Query results cache skipped",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-frontend – query splitting and results cache",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Sharded queries ratio\nThe % of queries that have been successfully rewritten and executed in a shardable way.\nThis panel only takes into account the type of queries that are supported by query sharding (eg. range queries).\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 11,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_frontend_query_sharding_rewrites_succeeded_total{$read_path_matcher}[$__rate_interval])) /\nsum(rate(cortex_frontend_query_sharding_rewrites_attempted_total{$read_path_matcher}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "sharded queries ratio",
                        "legendLink": null
                     }
                  ],
                  "title": "Sharded queries ratio",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Number of sharded queries per query\nThe number of sharded queries that have been executed for a single input query. It only tracks queries that\nhave been successfully rewritten in a shardable way.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 12,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_frontend_sharded_queries_per_query_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_frontend_sharded_queries_per_query_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_frontend_sharded_queries_per_query_sum{$read_path_matcher}[$__rate_interval])) * 1 / sum(rate(cortex_frontend_sharded_queries_per_query_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Number of sharded queries per query",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-frontend – query sharding",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 13,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_series_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_series_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "1 * sum(cluster_job:cortex_ingester_queried_series_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_series_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Series per query",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 14,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_samples_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_samples_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "1 * sum(cluster_job:cortex_ingester_queried_samples_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_samples_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Samples per query",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 15,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "1 * sum(cluster_job:cortex_ingester_queried_exemplars_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_exemplars_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Exemplars per query",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 16,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_querier_storegateway_instances_hit_per_query_sum{$read_path_matcher}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_instances_hit_per_query_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Number of store-gateways hit per query",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 17,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_querier_storegateway_refetches_per_query_sum{$read_path_matcher}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_refetches_per_query_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Refetches of missing blocks per query",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Consistency checks failed\nRate of queries that had to run with consistency checks and those checks failed. A failed consistency check means that some of at least one block which had to be queried wasn't present in any of the store-gateways.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Failure Rate"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 18,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_querier_blocks_consistency_checks_failed_total{$read_path_matcher}[$__rate_interval])) / sum(rate(cortex_querier_blocks_consistency_checks_total{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Failure Rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Consistency checks failed",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Rejected queries\nThe proportion of all queries received by queriers that were rejected for some reason.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 19,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by (reason) (rate(cortex_querier_queries_rejected_total{$read_path_matcher}[$__rate_interval])) / ignoring (reason) group_left sum(rate(cortex_querier_request_duration_seconds_count{$read_path_matcher, route=~\"(prometheus|api_prom)_api_v1_query(_range)?\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{reason}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Rejected queries",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Querier",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 20,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "max(cortex_bucket_index_loaded{$read_path_matcher})",
                        "format": "time_series",
                        "legendFormat": "Max",
                        "legendLink": null
                     },
                     {
                        "expr": "min(cortex_bucket_index_loaded{$read_path_matcher})",
                        "format": "time_series",
                        "legendFormat": "Min",
                        "legendLink": null
                     },
                     {
                        "expr": "avg(cortex_bucket_index_loaded{$read_path_matcher})",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "legendLink": null
                     }
                  ],
                  "title": "Bucket indexes loaded (per querier)",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 21,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_bucket_index_loads_total{$read_path_matcher}[$__rate_interval])) - sum(rate(cortex_bucket_index_load_failures_total{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_index_load_failures_total{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Bucket indexes load / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 22,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_index_load_duration_seconds_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_index_load_duration_seconds_bucket{$read_path_matcher}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_index_load_duration_seconds_sum{$read_path_matcher}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_index_load_duration_seconds_count{$read_path_matcher}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Bucket indexes load latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Blocks queried / sec by compaction level\nIncreased volume of lower levels (for example levels 1 and 2) can indicate that the compactor is not keeping up.\nIn that case the store-gateway will start serving more blocks which aren't that well compacted.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 23,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by (level) (rate(cortex_bucket_store_series_blocks_queried_sum{component=\"store-gateway\",level=~\"[0-4]\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{level}}",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_store_series_blocks_queried_sum{component=\"store-gateway\",level!~\"[0-4]\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "5+",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks queried / sec by compaction level",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "binBps"
                     },
                     "overrides": [ ]
                  },
                  "id": 24,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(data_type) (\n  # Exclude \"chunks refetched\".\n  rate(cortex_bucket_store_series_data_size_fetched_bytes_sum{component=\"store-gateway\", stage!=\"refetched\", cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{data_type}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Data fetched / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "binBps"
                     },
                     "overrides": [ ]
                  },
                  "id": 25,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(data_type) (\n  # Exclude \"chunks processed\" to only count \"chunks returned\", other than postings and series.\n  rate(cortex_bucket_store_series_data_size_touched_bytes_sum{component=\"store-gateway\", stage!=\"processed\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{data_type}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Data touched / sec",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Store-gateway",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 26,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(stage) (rate(cortex_bucket_store_series_request_stage_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum by(stage) (rate(cortex_bucket_store_series_request_stage_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "{{stage}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Series request average latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 27,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum by(stage, le) (rate(cortex_bucket_store_series_request_stage_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])))\n",
                        "format": "time_series",
                        "legendFormat": "{{stage}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Series request 99th percentile latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Series batch preloading efficiency\nThis panel shows the % of time reduced by preloading, for Series() requests which have been\nsplit to 2+ batches. If a Series() request is served within a single batch, then preloading\nis not triggered, and thus not counted in this measurement.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 28,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "# Clamping min to 0 because if preloading not useful at all, then the actual value we get is\n# slightly negative because of the small overhead introduced by preloading.\nclamp_min(1 - (\n    sum(rate(cortex_bucket_store_series_batch_preloading_wait_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n    /\n    sum(rate(cortex_bucket_store_series_batch_preloading_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n), 0)\n",
                        "format": "time_series",
                        "legendFormat": "% of time reduced by preloading",
                        "legendLink": null
                     }
                  ],
                  "title": "Series batch preloading efficiency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Blocks currently owned\nThis panel shows the number of blocks owned by each store-gateway replica.\nFor each owned block, the store-gateway keeps its index-header on disk, and\neventually loaded in memory (if index-header lazy loading is disabled, or lazy loading\nis enabled and the index-header was loaded).\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 29,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "cortex_bucket_store_blocks_loaded{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks currently owned",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 30,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_bucket_store_block_loads_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_store_block_load_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_store_block_load_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks loaded / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 31,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_bucket_store_block_drops_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_store_block_drop_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_store_block_drop_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks dropped / sec",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 32,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "cortex_bucket_store_indexheader_lazy_load_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"} - cortex_bucket_store_indexheader_lazy_unload_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Lazy loaded index-headers",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 33,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Index-header lazy load duration",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Index-header lazy load gate latency\nTime spent waiting for a turn to load an index header. This time is not included in \"Index-header lazy load duration.\"\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 34,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_stores_gate_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_stores_gate_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_bucket_stores_gate_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_stores_gate_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Index-header lazy load gate latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 35,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_bucket_store_series_hash_cache_hits_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_bucket_store_series_hash_cache_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "hit ratio",
                        "legendLink": null
                     }
                  ],
                  "title": "Series hash cache hit ratio",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 36,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(thanos_store_index_cache_hits_total{item_type=\"ExpandedPostings\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(thanos_store_index_cache_requests_total{item_type=\"ExpandedPostings\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "hit ratio",
                        "legendLink": null
                     }
                  ],
                  "title": "ExpandedPostings cache hit ratio",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 37,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_cache_memory_hits_total{name=\"chunks-attributes-cache\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_cache_memory_requests_total{name=\"chunks-attributes-cache\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "hit ratio",
                        "legendLink": null
                     }
                  ],
                  "title": "Chunks attributes in-memory cache hit ratio",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "classic",
                  "value": "1"
               },
               "description": "Choose between showing latencies based on low precision classic or high precision native histogram metrics.",
               "hide": 0,
               "includeAll": false,
               "label": "Latency metrics",
               "multi": false,
               "name": "latency_metrics",
               "options": [
                  {
                     "selected": false,
                     "text": "native",
                     "value": "-1"
                  },
                  {
                     "selected": true,
                     "text": "classic",
                     "value": "1"
                  }
               ],
               "query": "native : -1,classic : 1",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "cluster=~\"$cluster\"\\, job=~\"($namespace)/((cortex|mimir|mimir-backend.*|mimir-read.*|querier.*|query-frontend.*|query-scheduler.*|ruler-querier.*|ruler-query-frontend.*|ruler-query-scheduler.*))\""
               },
               "hide": 0,
               "includeAll": false,
               "label": "Read path",
               "multi": false,
               "name": "read_path_matcher",
               "options": [
                  {
                     "selected": true,
                     "text": "All",
                     "value": "cluster=~\"$cluster\"\\, job=~\"($namespace)/((cortex|mimir|mimir-backend.*|mimir-read.*|querier.*|query-frontend.*|query-scheduler.*|ruler-querier.*|ruler-query-frontend.*|ruler-query-scheduler.*))\""
                  },
                  {
                     "selected": false,
                     "text": "Main",
                     "value": "cluster=~\"$cluster\"\\, job=~\"($namespace)/((cortex|mimir|mimir-backend.*|mimir-read.*|querier.*|query-frontend.*|query-scheduler.*))\""
                  },
                  {
                     "selected": false,
                     "text": "Remote ruler",
                     "value": "cluster=~\"$cluster\"\\, job=~\"($namespace)/((ruler-querier.*|ruler-query-frontend.*|ruler-query-scheduler.*))\""
                  }
               ],
               "query": "All : cluster=~\"$cluster\"\\, job=~\"($namespace)/((cortex|mimir|mimir-backend.*|mimir-read.*|querier.*|query-frontend.*|query-scheduler.*|ruler-querier.*|ruler-query-frontend.*|ruler-query-scheduler.*))\",Main : cluster=~\"$cluster\"\\, job=~\"($namespace)/((cortex|mimir|mimir-backend.*|mimir-read.*|querier.*|query-frontend.*|query-scheduler.*))\",Remote ruler : cluster=~\"$cluster\"\\, job=~\"($namespace)/((ruler-querier.*|ruler-query-frontend.*|ruler-query-scheduler.*))\"",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Queries",
      "uid": "b3abe8d5c040395cc36615cb4334c92d",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "175px",
            "panels": [
               {
                  "content": "<p>\n  This dashboard shows health metrics for the read path.\n  It is broken into sections for each service on the read path, and organized by the order in which the read request flows.\n  <br/>\n  Incoming queries travel from the gateway → query frontend → query scheduler → querier → ingester and/or store-gateway (depending on the time range of the query).\n  <br/>\n  For each service, there are 3 panels showing (1) requests per second to that service, (2) average, median, and p99 latency of requests to that service, and (3) p99 latency of requests to each instance of that service.\n</p>\n<p>\n  The dashboard also shows metrics for the 4 optional caches that can be deployed:\n  the query results cache, the metadata cache, the chunks cache, and the index cache.\n  <br/>\n  These panels will show “no data” if the caches are not deployed.\n</p>\n<p>\n  Lastly, it also includes metrics for how the ingester and store-gateway interact with object storage.\n</p>\n",
                  "datasource": null,
                  "description": "",
                  "id": 1,
                  "mode": "markdown",
                  "span": 12,
                  "title": "",
                  "transparent": true,
                  "type": "text"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Reads dashboard description",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "100px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Instant queries per second\nRate of instant queries per second being made to the system.\nIncludes both queries made to the <tt>/prometheus</tt> API as\nwell as queries from the ruler.\n\n",
                  "fill": 1,
                  "format": "reqps",
                  "id": 2,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "(sum (rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query\"}[$__rate_interval])) + sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum (histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query\"}[$__rate_interval]))) + sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Instant queries / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Range queries per second\nRate of range queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                  "fill": 1,
                  "format": "reqps",
                  "id": 3,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "(sum (rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query_range\"}[$__rate_interval]))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum (histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query_range\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Range queries / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### \"Label names\" queries per second\nRate of \"label names\" endpoint queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                  "fill": 1,
                  "format": "reqps",
                  "id": 4,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "(sum (rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_labels\"}[$__rate_interval]))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum (histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_labels\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Label names queries / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### \"Label values\" queries per second\nRate of specific \"label values\" endpoint queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                  "fill": 1,
                  "format": "reqps",
                  "id": 5,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "(sum (rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_label_name_values\"}[$__rate_interval]))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum (histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_label_name_values\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Label values queries / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Series queries per second\nRate of series queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                  "fill": 1,
                  "format": "reqps",
                  "id": 6,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "(sum (rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_series\"}[$__rate_interval]))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum (histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_series\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Series queries / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Headlines",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.99, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_native"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_native"
                     },
                     {
                        "expr": "(1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) /\nsum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_classic"
                     },
                     {
                        "expr": "(1e3 * sum(histogram_sum(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) /\nsum(histogram_count(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_native"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 9,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-frontend",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 10,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Latency (Time in Queue)\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 11,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency (Time in Queue)",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Queue length\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "queries"
                     },
                     "overrides": [ ]
                  },
                  "id": 12,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "sum(min_over_time(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__interval]))",
                        "format": "time_series",
                        "legendFormat": "Queue length",
                        "legendLink": null
                     }
                  ],
                  "title": "Queue length",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-scheduler",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### 99th Percentile Latency by Expected Query Component\n<p>\n  The query-scheduler creates subqueues\n  broken out by which query components (ingester, store-gateway, or both)\n  the querier is expected to fetch data from to service the query.\n</p><p>\n  Queries which have not had an expected query component determined are labeled 'unknown'.\n</p><p>\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 13,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "label_replace(histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"unknown\", \"additional_queue_dimensions\", \"^$\")\n",
                        "format": "time_series",
                        "legendFormat": "99th Percentile: {{ additional_queue_dimensions }}",
                        "refId": "A"
                     }
                  ],
                  "title": "99th Percentile Latency by Expected Query Component",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### 50th Percentile Latency by Expected Query Component\n<p>\n  The query-scheduler creates subqueues\n  broken out by which query components (ingester, store-gateway, or both)\n  the querier is expected to fetch data from to service the query.\n</p><p>\n  Queries which have not had an expected query component determined are labeled 'unknown'.\n</p><p>\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 14,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "label_replace(histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"unknown\", \"additional_queue_dimensions\", \"^$\")\n",
                        "format": "time_series",
                        "legendFormat": "50th Percentile: {{ additional_queue_dimensions }}",
                        "refId": "A"
                     }
                  ],
                  "title": "50th Percentile Latency by Expected Query Component",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Average Latency by Expected Query Component\n<p>\n  The query-scheduler creates subqueues\n  broken out by which query components (ingester, store-gateway, or both)\n  the querier is expected to fetch data from to service the query.\n</p><p>\n  Queries which have not had an expected query component determined are labeled 'unknown'.\n</p><p>\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 15,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "label_replace(sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (additional_queue_dimensions) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (additional_queue_dimensions), \"additional_queue_dimensions\", \"unknown\", \"additional_queue_dimensions\", \"^$\")\n",
                        "format": "time_series",
                        "legendFormat": "Average: {{ additional_queue_dimensions }}",
                        "refId": "C"
                     }
                  ],
                  "title": "Average Latency by Expected Query Component",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-scheduler Latency (Time in Queue) Breakout by Expected Query Component",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### 99th Percentile Inflight Requests by Query Component vs. Total Connected Queriers\n<p>\n  The query-scheduler tracks query requests inflight\n  between the scheduler and the connected queriers,\n  broken out by which query component (ingester, store-gateway)\n  the querier is expected to fetch data from to service the query.\n</p><p>\n  Queries which require data from both ingesters and store-gateways\n  are counted in each category, so the sum of the two categories\n  may exceed the true total number of queries inflight.\n</p><p>\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 16,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "sum by(query_component) (cortex_query_scheduler_querier_inflight_requests{quantile=\"0.99\", cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"})",
                        "format": "time_series",
                        "legendFormat": "99th Percentile Inflight Requests: {{query_component}}",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(cortex_query_scheduler_connected_querier_clients{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"})",
                        "format": "time_series",
                        "legendFormat": "Total Connected Queriers",
                        "legendLink": null
                     }
                  ],
                  "title": "99th Percentile Inflight Requests by Query Component vs. Total Connected Queriers",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Query-scheduler <-> Querier Inflight Requests",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 17,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum (\n  rate(thanos_cache_operations_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "Requests/s",
                        "legendLink": null
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 18,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_cache_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_cache_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_cache_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_cache_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Cache – query results",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 19,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 20,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "1e3 * sum(cluster_job_route:cortex_querier_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_querier_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 21,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_querier_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Querier",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\nThis panel shows ingester query requests from all sources: the main query path, and the remote ruler query path, if in use. The data shown is as reported by ingesters.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 22,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Latency\nThis panel shows ingester query requests from all sources: the main query path, and the remote ruler query path, if in use. The data shown is as reported by ingesters.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 23,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.99, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_native"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_native"
                     },
                     {
                        "expr": "(1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}) /\nsum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_classic"
                     },
                     {
                        "expr": "(1e3 * sum(histogram_sum(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) /\nsum(histogram_count(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_native"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Per ingester pod p99 latency\nThis panel shows ingester query requests from all sources: the main query path, and the remote ruler query path, if in use. The data shown is as reported by ingesters.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 24,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per ingester pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester - query requests from all sources",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\nThis panel shows ingester query requests from just the main query path (ie. excluding the ruler query path, if enabled). The data shown is as reported by queriers.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 25,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_ingester_client_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Latency\nThis panel shows ingester query requests from just the main query path (ie. excluding the ruler query path, if enabled). The data shown is as reported by queriers.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 26,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Per querier pod p99 latency\nThis panel shows ingester query requests from just the main query path (ie. excluding the ruler query path, if enabled). The data shown is as reported by queriers.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 27,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_ingester_client_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per querier pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester - query requests from this query path only",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\nThis panel shows store-gateway query requests from all sources: the main query path, and the remote ruler query path, if in use. The data shown is as reported by store-gateways.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 28,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Latency\nThis panel shows store-gateway query requests from all sources: the main query path, and the remote ruler query path, if in use. The data shown is as reported by store-gateways.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 29,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.99, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_native"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_native"
                     },
                     {
                        "expr": "(1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}) /\nsum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_classic"
                     },
                     {
                        "expr": "(1e3 * sum(histogram_sum(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) /\nsum(histogram_count(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_native"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Per store-gateway pod p99 latency\nThis panel shows store-gateway query requests from all sources: the main query path, and the remote ruler query path, if in use. The data shown is as reported by store-gateways.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 30,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per store-gateway pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Store-gateway - query requests from all sources",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\nThis panel shows store-gateway query requests from just the main query path (ie. excluding the ruler query path, if enabled). The data shown is as reported by queriers.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 31,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_storegateway_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_storegateway_client_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Latency\nThis panel shows store-gateway query requests from just the main query path (ie. excluding the ruler query path, if enabled). The data shown is as reported by queriers.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 32,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_storegateway_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_storegateway_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_storegateway_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_storegateway_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Per querier pod p99 latency\nThis panel shows store-gateway query requests from just the main query path (ie. excluding the ruler query path, if enabled). The data shown is as reported by queriers.\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 33,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_storegateway_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_storegateway_client_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", operation=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per querier pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Store-gateway - query requests from this query path only",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Replicas\nThe maximum, and current number of querier replicas.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/Max .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/Current .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/Min .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 34,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_max_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"}\n  # Add the scaletargetref_name label which is more readable than \"kube-hpa-...\"\n  * on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    group by (cluster, namespace, horizontalpodautoscaler, scaletargetref_name) (kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"})\n)\n",
                        "format": "time_series",
                        "legendFormat": "Max {{ scaletargetref_name }}",
                        "legendLink": null
                     },
                     {
                        "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_status_current_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"}\n  # Add the scaletargetref_name label which is more readable than \"kube-hpa-...\"\n  * on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    group by (cluster, namespace, horizontalpodautoscaler, scaletargetref_name) (kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"})\n)\n",
                        "format": "time_series",
                        "legendFormat": "Current {{ scaletargetref_name }}",
                        "legendLink": null
                     },
                     {
                        "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_min_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"}\n  # Add the scaletargetref_name label which is more readable than \"kube-hpa-...\"\n  * on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    group by (cluster, namespace, horizontalpodautoscaler, scaletargetref_name) (kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"})\n)\n",
                        "format": "time_series",
                        "legendFormat": "Min {{ scaletargetref_name }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Replicas",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Scaling metric (desired replicas)\nThis panel shows the result scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints which are applied later.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 35,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left\n  max by (cluster, namespace, scaledObject, metric) (\n    label_replace(label_replace(\n        kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"},\n        \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    ), \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(?:mimir-)?(.*)\")\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{ scaler }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Scaling metric (desired replicas)",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Autoscaler failures rate\nThe rate of failures in the KEDA custom metrics API server. Whenever an error occurs, the KEDA custom\nmetrics server is unable to query the scaling metric from Prometheus so the autoscaler wouldn't work properly.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 36,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(cluster, namespace, metric, scaledObject, scaler) (\n  label_replace(\n    rate(keda_scaler_errors[$__rate_interval]),\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.+)\"\n  )\n) +\non(cluster, namespace, metric, scaledObject) group_left\n  # Using `max by ()` so that series churn doesn't break the promQL join\n  max by (cluster, namespace, metric, scaledObject) (\n    label_replace(\n      label_replace(\n          kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?querier\"} * 0,\n          \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(?:mimir-)?(.*)\"\n      ),\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    )\n  )\n",
                        "format": "time_series",
                        "legendFormat": "{{scaler}} failures",
                        "legendLink": null
                     }
                  ],
                  "title": "Autoscaler failures rate",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Querier – autoscaling",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 37,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 38,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Store-gateway – key-value store for store-gateways ring",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 39,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(operation) (\n  rate(\n    thanos_cache_operations_total{\n      component=\"store-gateway\",\n      name=\"index-cache\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 40,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])) * 1e3 / sum(rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency (getmulti)",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Hit ratio\nEven if you do not set up memcached for the blocks index cache, you will still see data in this panel because the store-gateway by default has an\nin-memory blocks index cache.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 41,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(item_type) (\n  rate(\n    thanos_store_index_cache_hits_total{\n      component=\"store-gateway\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n/\nsum by(item_type) (\n  rate(\n    thanos_store_index_cache_requests_total{\n      component=\"store-gateway\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{item_type}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Hit ratio",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Memcached – block index cache (store-gateway accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 42,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(operation) (\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 43,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])) * 1e3 / sum(rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency (getmulti)",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 44,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "items",
                        "legendLink": null
                     }
                  ],
                  "title": "Hit ratio",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Memcached – chunks cache (store-gateway accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 45,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(operation) (\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 46,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])) * 1e3 / sum(rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency (getmulti)",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 47,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "items",
                        "legendLink": null
                     }
                  ],
                  "title": "Hit ratio",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Memcached – metadata cache (store-gateway accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [ ]
                  },
                  "id": 48,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(operation) (\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 49,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])) * 1e3 / sum(rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency (getmulti)",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 50,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                        "format": "time_series",
                        "legendFormat": "items",
                        "legendLink": null
                     }
                  ],
                  "title": "Hit ratio",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Memcached – metadata cache (querier accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 51,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Operations / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "min": 0,
                        "noValue": "0",
                        "unit": "percentunit"
                     }
                  },
                  "id": 52,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval])) >= 0",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Error rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 53,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Attributes",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 54,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Exists",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Blocks object store (store-gateway accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 55,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Get",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 56,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: GetRange",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 57,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Upload",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 58,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Delete",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 59,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Operations / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "min": 0,
                        "noValue": "0",
                        "unit": "percentunit"
                     }
                  },
                  "id": 60,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval])) >= 0",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Error rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 61,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Attributes",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 62,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Exists",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Blocks object store (querier accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 63,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Get",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 64,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: GetRange",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 65,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Upload",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 66,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Delete",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "classic",
                  "value": "1"
               },
               "description": "Choose between showing latencies based on low precision classic or high precision native histogram metrics.",
               "hide": 0,
               "includeAll": false,
               "label": "Latency metrics",
               "multi": false,
               "name": "latency_metrics",
               "options": [
                  {
                     "selected": false,
                     "text": "native",
                     "value": "-1"
                  },
                  {
                     "selected": true,
                     "text": "classic",
                     "value": "1"
                  }
               ],
               "query": "native : -1,classic : 1",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Reads",
      "uid": "e327503188913dc38ad571c647eef643",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "100px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 1,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 3,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(cortex_ruler_managers_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Active configurations",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 2,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 3,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Total rules",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Reads from ingesters - RPS\nNote: Even while operating in Remote ruler mode you will still see values for this panel.\n\nThis is because the metrics are inclusive of intermediate services and are showing the requests that ultimately reach the ingesters.\n\nFor a more detailed view of the read path when using remote ruler mode, see the Remote ruler reads dashboard.\n\n",
                  "fill": 1,
                  "format": "reqps",
                  "id": 3,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 3,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]))",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Reads from ingesters - RPS",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "reqps",
                  "id": 4,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 3,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Writes to ingesters - RPS",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Headlines",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 5,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "success",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "missed",
                        "legendLink": null
                     }
                  ],
                  "title": "Evaluations per second",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 6,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "average",
                        "legendLink": null
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Rule evaluations global",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Writes (ingesters)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 9,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "QPS",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 10,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Reads (ingesters)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "request"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#FFC000",
                                    "mode": "fixed"
                                 }
                              },
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E02F44",
                                    "mode": "fixed"
                                 }
                              },
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 11,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     },
                     {
                        "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"})",
                        "format": "time_series",
                        "legendFormat": "limit",
                        "legendLink": null
                     },
                     {
                        "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\",resource=\"cpu\"})",
                        "format": "time_series",
                        "legendFormat": "request",
                        "legendLink": null
                     }
                  ],
                  "title": "CPU",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "bytes"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "request"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#FFC000",
                                    "mode": "fixed"
                                 }
                              },
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E02F44",
                                    "mode": "fixed"
                                 }
                              },
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 12,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"})",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     },
                     {
                        "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"} > 0)",
                        "format": "time_series",
                        "legendFormat": "limit",
                        "legendLink": null
                     },
                     {
                        "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\",resource=\"memory\"})",
                        "format": "time_series",
                        "legendFormat": "request",
                        "legendLink": null
                     }
                  ],
                  "title": "Memory (workingset)",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "bytes"
                     },
                     "overrides": [ ]
                  },
                  "id": 13,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"})",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Memory (go heap inuse)",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ruler resources",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 14,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 15,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ruler - key-value store for rulers ring",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 16,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_querier_storegateway_instances_hit_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_instances_hit_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Number of store-gateways hit per query",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 17,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_querier_storegateway_refetches_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_refetches_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Refetches of missing blocks per query",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "description": "### Consistency checks failed\nRate of queries that had to run with consistency checks and those checks failed. A failed consistency check means that some of at least one block which had to be queried wasn't present in any of the store-gateways.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Failures / sec"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 18,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_querier_blocks_consistency_checks_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) / sum(rate(cortex_querier_blocks_consistency_checks_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Failures / sec",
                        "legendLink": null
                     }
                  ],
                  "title": "Consistency checks failed",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ruler - blocks storage",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 19,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(user) (rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]) > 0)\n> 0\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Delivery errors",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "max": 1,
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "percentunit"
                     },
                     "overrides": [ ]
                  },
                  "id": 20,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(user) (cortex_prometheus_notifications_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"})\n  /\nsum by(user) (cortex_prometheus_notifications_queue_capacity{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}) > 0\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Queue length",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 21,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by (user) (increase(cortex_prometheus_notifications_dropped_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Dropped",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Notifications",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 22,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(user) (rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Missed iterations",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 23,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "rate(cortex_prometheus_rule_group_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n  /\nrate(cortex_prometheus_rule_group_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 24,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by(rule_group) (rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0",
                        "format": "time_series",
                        "legendFormat": "{{ rule_group }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Failures",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Group evaluations",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 25,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "sum by(user) (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Rule evaluation per user",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 26,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Operations / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "max": 1,
                        "min": 0,
                        "noValue": "0",
                        "unit": "percentunit"
                     }
                  },
                  "id": 27,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval])) >= 0",
                        "format": "time_series",
                        "legendFormat": "{{operation}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Error rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 28,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Attributes",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 29,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Exists",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ruler configuration object store (ruler accesses)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 30,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Get",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 31,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: GetRange",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 32,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Upload",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 33,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency of op: Delete",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "classic",
                  "value": "1"
               },
               "description": "Choose between showing latencies based on low precision classic or high precision native histogram metrics.",
               "hide": 0,
               "includeAll": false,
               "label": "Latency metrics",
               "multi": false,
               "name": "latency_metrics",
               "options": [
                  {
                     "selected": false,
                     "text": "native",
                     "value": "-1"
                  },
                  {
                     "selected": true,
                     "text": "classic",
                     "value": "1"
                  }
               ],
               "query": "native : -1,classic : 1",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Ruler",
      "uid": "631e15d5d85afb2ca8e35d62984eeaa0",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [
            {
               "datasource": "$datasource",
               "enable": true,
               "expr": "sum by (user) (cortex_ingester_active_series_loading{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}) > 0",
               "filter": {
                  "exclude": false,
                  "ids": [
                     2,
                     7,
                     8
                  ]
               },
               "hide": true,
               "iconColor": "yellow",
               "name": "Active Series Reload",
               "titleFormat": "Active series reloading for user {{user}}"
            }
         ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "25px",
            "panels": [
               {
                  "content": "<p>\n  This dashboard shows various metrics detailed by tenant (user) selected above.\n</p>\n",
                  "datasource": null,
                  "description": "",
                  "id": 1,
                  "mode": "markdown",
                  "span": 12,
                  "title": "",
                  "transparent": true,
                  "type": "text"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Tenants dashboard description",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### All series\nNumber of active, in-memory, and owned series per user, and active series matching custom trackers (in parenthesis).\nNote that these counts include all series regardless of the type of data (counter, gauge, native histogram, etc.).\nNote that active series matching custom trackers are included in the total active series count.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 2,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    (\n  cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  - cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n)\n unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        (\n  cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  - cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n)\n,\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "in-memory",
                        "legendLink": null
                     },
                     {
                        "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"max_global_series_per_user\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"max_global_series_per_user\"})\n",
                        "format": "time_series",
                        "legendFormat": "limit",
                        "legendLink": null
                     },
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "active",
                        "legendLink": null
                     },
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "owned",
                        "legendLink": null
                     },
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, name) (\n    cortex_ingester_active_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, name) (\n    max by (ingester_id, cluster, namespace, name) (\n      label_replace(\n        cortex_ingester_active_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "active ({{ name }})",
                        "legendLink": null
                     }
                  ],
                  "title": "All series",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### In-memory series per ingester\nLocal tenant series limit and number of in-memory series per ingester.\nBecause series can be unevenly distributed across ingesters, ingesters may hit the local limit at different times.\nNote that in-memory series may exceed the local limit if limiting based on owned series is enabled.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/local limit .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              },
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "yellow",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 3,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "min by (job) (cortex_ingester_local_limits{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", limit=\"max_global_series_per_user\", user=\"$user\"})\n",
                        "format": "time_series",
                        "legendFormat": "local limit ({{job}})",
                        "legendLink": null
                     },
                     {
                        "expr": "cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n- cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "In-memory series per ingester",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Owned series per ingester\nLocal tenant series limit and number of owned series per ingester.\nBecause series can be unevenly distributed across ingesters, ingesters may hit the local limit at different times.\nOwned series are the subset of an ingester's in-memory series that currently map to it in the ring\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/local limit .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              },
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "yellow",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 4,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "min by (job) (cortex_ingester_local_limits{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", limit=\"max_global_series_per_user\", user=\"$user\"})\n",
                        "format": "time_series",
                        "legendFormat": "local limit ({{job}})",
                        "legendLink": null
                     },
                     {
                        "expr": "cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n",
                        "format": "time_series",
                        "legendFormat": "{{pod}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Owned series per ingester",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Tenant series counts",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Series with exemplars\nNumber of series with exemplars currently in storage.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 5,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "series",
                        "legendLink": null
                     }
                  ],
                  "title": "Series with exemplars",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Oldest exemplar age\nThe age of the oldest exemplar stored in circular storage.\nUseful to check for what time range the current exemplar buffer limit allows.\nThis usually means the max age for all exemplars for a typical setup.\nThis is not true though if one of the series timestamp is in future compared to rest series.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 6,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "time() - min(cortex_ingester_tsdb_exemplar_last_exemplars_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} > 0)",
                        "format": "time_series",
                        "legendFormat": "age",
                        "legendLink": null
                     }
                  ],
                  "title": "Oldest exemplar age",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Native histogram series\nNumber of active native histogram series per user, and active native histogram series matching custom trackers (in parenthesis).\nNote that active series matching custom trackers are included in the total active series count.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_active_native_histogram_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_active_native_histogram_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "active",
                        "legendLink": null
                     },
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, name) (\n    cortex_ingester_active_native_histogram_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, name) (\n    max by (ingester_id, cluster, namespace, name) (\n      label_replace(\n        cortex_ingester_active_native_histogram_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "active ({{ name }})",
                        "legendLink": null
                     }
                  ],
                  "title": "Native histogram series",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Total number of buckets used by native histogram series\nTotal number of buckets in active native histogram series per user, and total active native histogram buckets matching custom trackers (in parenthesis).\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 8,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_active_native_histogram_buckets{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_active_native_histogram_buckets{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "buckets",
                        "legendLink": null
                     },
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, name) (\n    cortex_ingester_active_native_histogram_buckets_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, name) (\n    max by (ingester_id, cluster, namespace, name) (\n      label_replace(\n        cortex_ingester_active_native_histogram_buckets_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "buckets ({{ name }})",
                        "legendLink": null
                     }
                  ],
                  "title": "Total number of buckets used by native histogram series",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Exemplars and native histograms",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Distributor requests incoming rate\nThe rate of requests that have come in to the distributor, including rejected requests.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 9,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_requests_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor requests incoming rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor requests received (accepted) rate\nThe rate of received requests, excluding rejected requests.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 10,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_received_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     },
                     {
                        "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"request_rate\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"request_rate\"})\n",
                        "format": "time_series",
                        "legendFormat": "limit",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor requests received (accepted) rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Newest seen sample age\nThe age of the newest received sample seen in the distributors.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 11,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "time() - max(cortex_distributor_latest_seen_sample_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} > 0)",
                        "format": "time_series",
                        "legendFormat": "age",
                        "legendLink": null
                     }
                  ],
                  "title": "Newest seen sample age",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor discarded requests rate\nThe rate of each request's discarding reason.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 12,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by (reason) (rate(cortex_discarded_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{ reason }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor discarded requests rate",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Distributor ingestion requests",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Distributor samples incoming rate\nThe rate of samples that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 13,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_samples_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor samples incoming rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor samples received (accepted) rate\nThe rate of received samples, excluding rejected and deduped samples.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 14,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     },
                     {
                        "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ingestion_rate\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ingestion_rate\"})\n",
                        "format": "time_series",
                        "legendFormat": "limit",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor samples received (accepted) rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor deduplicated/non-HA\nThe rate of deduplicated samples and the rate of received samples for a user that has HA tracking turned on, but the sample didn't contain both HA labels.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 15,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 2,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_deduped_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "deduplicated",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_distributor_non_ha_samples_received_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "non-HA",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor deduplicated/non-HA",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor and ingester discarded samples rate\nThe rate of each sample's discarding reason.\nThis doesn't account for the replication factor.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 16,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 2,
                  "targets": [
                     {
                        "expr": "sum by (reason) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{ reason }} (distributor)",
                        "legendLink": null
                     },
                     {
                        "expr": "sum by (reason) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{ reason }} (ingester, replicated)",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor and ingester discarded samples rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Out-of-order samples appended\nThe rate of OOO samples that have been appended.\nThis doesn't account for the replication factor.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 17,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 2,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_out_of_order_samples_appended_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Out-of-order samples appended",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Samples ingestion funnel",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Distributor exemplars incoming rate\nThe rate of exemplars that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 18,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_exemplars_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor exemplars incoming rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor exemplars received (accepted) rate\nThe rate of received exemplars, excluding rejected and deduped exemplars.\nThis number can be sensibly lower than incoming rate because we dedupe the HA sent exemplars, and then reject based on time.\nSee discarded rate for reasons why exemplars are being discarded.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 19,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_distributor_received_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor exemplars received (accepted) rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor discarded exemplars rate\nThe rate of each exmplars' discarding reason.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 20,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by (reason) (rate(cortex_discarded_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{ reason }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor discarded exemplars rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Ingester appended exemplars rate\nTotal number of exemplars appended in the ingesters.\nThis can be lower than ingested exemplars rate since TSDB does not append the same exemplar twice, and those can be frequent.\nThis doesn't account for the replication factor.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 21,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    rate(cortex_ingester_tsdb_exemplar_exemplars_appended_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]) unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        rate(cortex_ingester_tsdb_exemplar_exemplars_appended_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]),\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Ingester appended exemplars rate",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Exemplars ingestion funnel",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Symbol table size for loaded blocks\nSize of symbol table in memory for loaded blocks, averaged by ingester.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "bytes"
                     },
                     "overrides": [ ]
                  },
                  "id": 22,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (job) (cortex_ingester_tsdb_symbol_table_size_bytes{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "{{ job }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Symbol table size for loaded blocks",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Space used by local blocks\nThe number of bytes that are currently used for local storage by all blocks.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "bytes"
                     },
                     "overrides": [ ]
                  },
                  "id": 23,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (job) (cortex_ingester_tsdb_storage_blocks_bytes{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "{{ job }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Space used by local blocks",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingesters' storage",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Number of groups\nTotal number of rule groups for a tenant.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "limit"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 24,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "count(sum by (rule_group) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}))",
                        "format": "time_series",
                        "legendFormat": "groups",
                        "legendLink": null
                     },
                     {
                        "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ruler_max_rule_groups_per_tenant\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ruler_max_rule_groups_per_tenant\"})\n",
                        "format": "time_series",
                        "legendFormat": "limit",
                        "legendLink": null
                     }
                  ],
                  "title": "Number of groups",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Number of rules\nTotal number of rules for a tenant.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 25,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "rules",
                        "legendLink": null
                     }
                  ],
                  "title": "Number of rules",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 26,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Total evaluations rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 27,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "topk(50, sum by (rule_group) (rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) > 0)",
                        "format": "time_series",
                        "legendFormat": "{{ rule_group }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Failed evaluations rate (top 50 rule groups)",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Rules",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value #A"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "rules"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 28,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 6,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (rule_group) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit biggest groups",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value #A"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "seconds"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 29,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 6,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (rule_group) (cortex_prometheus_rule_group_last_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit slowest groups (last evaluation)",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Top rules",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 30,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Sent notifications rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "rate"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 31,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "rate",
                        "legendLink": null
                     }
                  ],
                  "title": "Failed notifications rate",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Notifications",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 32,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "sum by (user) (cortex_alertmanager_alerts{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "alerts",
                        "legendLink": null
                     },
                     {
                        "expr": "sum by (user) (cortex_alertmanager_silences{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "silences",
                        "legendLink": null
                     }
                  ],
                  "title": "Alerts",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 33,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(\nsum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))\n-\non() (sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) or on () vector(0))\n) > 0\n",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "NPS",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 34,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(\nsum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration)\n-\n(sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration) or\n (sum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration) * 0)\n)) > 0\n",
                        "format": "time_series",
                        "legendFormat": "success - {{ integration }}",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration)",
                        "format": "time_series",
                        "legendFormat": "failed - {{ integration }}",
                        "legendLink": null
                     }
                  ],
                  "title": "NPS by integration",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Alertmanager",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 35,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_query_frontend_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Queries / Sec",
                        "legendLink": null
                     }
                  ],
                  "title": "Rate of Read Requests - query-frontend",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Number of Queries Queued - query-scheduler\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 36,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "Queue Length",
                        "legendLink": null
                     }
                  ],
                  "title": "Number of Queries Queued - query-scheduler",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Read Path - Queries (User)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 37,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_query_frontend_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", user=\"$user\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Queries / Sec",
                        "legendLink": null
                     }
                  ],
                  "title": "Rate of Read Requests - ruler-query-frontend",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Number of Queries Queued - ruler-query-scheduler\n<p>\n  The query-scheduler is an optional service that moves the internal queue from the query-frontend into a separate component.\n  If the query-scheduler is not deployed, these panels will show \"No data.\"\n</p>\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 38,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\", user=\"$user\"})",
                        "format": "time_series",
                        "legendFormat": "Queue Length",
                        "legendLink": null
                     }
                  ],
                  "title": "Number of Queries Queued - ruler-query-scheduler",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Read Path - Queries (Ruler)",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Estimated Compaction Jobs\nEstimated number of compaction jobs for selected user, based on latest version of bucket index. When user sends data, ingesters upload new user blocks every 2 hours\n(shortly after 01:00 UTC, 03:00 UTC, 05:00 UTC, etc.), and compactors should process all of the blocks within 2h interval.\nIf this graph regularly goes to zero (or close to zero) in 2 hour intervals, then compaction for this user works correctly.\n\nDepending on the configuration, there are two types of jobs: `split` jobs and `merge` jobs. Split jobs will only show up when user is configured with positive number of `compactor_split_and_merge_shards`.\nValues for split and merge jobs are stacked.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 50,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 39,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (type) (cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", user=\"$user\"})\nand ignoring(type)\n(sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) == 0)\n",
                        "format": "time_series",
                        "legendFormat": "{{ job }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Estimated Compaction Jobs",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Number of blocks\nNumber of blocks stored in long-term storage for this user.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 40,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "max by (user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", user=\"$user\"})\n",
                        "format": "time_series",
                        "legendFormat": "{{ job }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Blocks",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Compactions",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": null,
               "current": {
                  "text": "prod",
                  "value": "prod"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "user",
               "multi": false,
               "name": "user",
               "options": [ ],
               "query": "label_values(cortex_ingester_active_series{cluster=~\"$cluster\", namespace=~\"$namespace\"}, user)",
               "refresh": 1,
               "regex": "",
               "sort": 7,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "10",
                  "value": "10"
               },
               "hide": 0,
               "includeAll": false,
               "label": "limit",
               "multi": false,
               "name": "limit",
               "options": [
                  {
                     "selected": true,
                     "text": "10",
                     "value": "10"
                  },
                  {
                     "selected": false,
                     "text": "50",
                     "value": "50"
                  },
                  {
                     "selected": false,
                     "text": "100",
                     "value": "100"
                  },
                  {
                     "selected": false,
                     "text": "500",
                     "value": "500"
                  },
                  {
                     "selected": false,
                     "text": "1000",
                     "value": "1000"
                  }
               ],
               "query": "10 : 10,50 : 50,100 : 100,500 : 500,1000 : 1000",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Tenants",
      "uid": "35fa247ce651ba189debf33d7ae41611",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "25px",
            "panels": [
               {
                  "content": "<p>\n  This dashboard shows the top tenants based on multiple selection criterias.\n  Rows are collapsed by default to avoid querying all of them.\n  Use the templating variable \"limit\" above to select the amount of users to be shown.\n</p>\n",
                  "datasource": null,
                  "description": "",
                  "id": 1,
                  "mode": "markdown",
                  "span": 12,
                  "title": "",
                  "transparent": true,
                  "type": "text"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Top tenants dashboard description",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "series"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 2,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, ( # Classic storage\n  sum by (cluster, namespace, user) (\n    cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, user) (\n    max by (ingester_id, cluster, namespace, user) (\n      label_replace(\n        cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n)\n",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by active series",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By active series",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "series"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 3,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, ( # Classic storage\n  sum by (cluster, namespace, user) (\n    (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n)\n unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, user) (\n    max by (ingester_id, cluster, namespace, user) (\n      label_replace(\n        (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n)\n,\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n)",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by in-memory series (series created - series removed)",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By in-memory series",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 4,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "(( # Classic storage\n  sum by (cluster, namespace, user) (\n    (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n)\n unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, user) (\n    max by (ingester_id, cluster, namespace, user) (\n      label_replace(\n        (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} \n)\n,\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n)\nand\ntopk($limit,\n  (\n    ( # Classic storage\n  sum by (cluster, namespace, user) (\n    (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ end()\n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ end()\n)\n unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, user) (\n    max by (ingester_id, cluster, namespace, user) (\n      label_replace(\n        (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ end()\n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ end()\n)\n,\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n\n  )\n  -\n  (\n    ( # Classic storage\n  sum by (cluster, namespace, user) (\n    (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ start()\n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ start()\n)\n unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, user) (\n    max by (ingester_id, cluster, namespace, user) (\n      label_replace(\n        (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ start()\n    -\n    cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ start()\n)\n,\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Top $limit users by in-memory series (series created - series removed) that grew the most between query range start and query range end",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By in-memory series growth",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "samples/s"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 5,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[5m])))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by received samples rate in last 5m",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By samples rate",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 6,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))\nand\ntopk($limit,\n  sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ end()))\n  -\n  sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ start()))\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Top $limit users by received samples rate that grew the most between query range start and query range end",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By samples rate growth",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "samples/s"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 7,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[5m])))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by discarded samples rate in last 5m",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By discarded samples rate",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 12,
                  "targets": [
                     {
                        "expr": "sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))\nand\ntopk($limit,\n  sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ end()))\n  -\n  sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ start()))\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{ user }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Top $limit users by discarded samples rate that grew the most between query range start and query range end",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By discarded samples rate growth",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "series"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 9,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, ( # Classic storage\n  sum by (cluster, namespace, user) (\n    cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, user) (\n    max by (ingester_id, cluster, namespace, user) (\n      label_replace(\n        cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n)\n",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by series with exemplars",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By series with exemplars",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "exemplars/s"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 10,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (user) (rate(cortex_distributor_received_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[5m])))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by received exemplars rate in last 5m",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By exemplars rate",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "rules"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 11,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 3,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (rule_group, user) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit biggest groups",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By rule group size",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "seconds"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 12,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 3,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit, sum by (rule_group, user) (cortex_prometheus_rule_group_last_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}))",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit slowest groups (last evaluation)",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By rule group evaluation time",
            "titleSize": "h6"
         },
         {
            "collapse": true,
            "height": "250px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Time"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Time"
                              },
                              {
                                 "id": "custom.hidden",
                                 "value": true
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "Value"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "Compaction Jobs"
                              },
                              {
                                 "id": "decimals",
                                 "value": 0
                              },
                              {
                                 "id": "unit",
                                 "value": "short"
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "user"
                           },
                           "properties": [
                              {
                                 "id": "displayName",
                                 "value": "user"
                              },
                              {
                                 "id": "decimals",
                                 "value": 2
                              },
                              {
                                 "id": "unit",
                                 "value": "string"
                              }
                           ]
                        }
                     ]
                  },
                  "fill": 1,
                  "id": 13,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "sort": {
                     "col": 2,
                     "desc": true
                  },
                  "spaceLength": 10,
                  "span": 12,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "topk($limit,\n  sum by (user) (cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"})\n  and ignoring(user)\n  (sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) == 0)\n)\n",
                        "format": "table",
                        "instant": true,
                        "legendFormat": "",
                        "refId": "A"
                     }
                  ],
                  "thresholds": [ ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Top $limit users by estimated compaction jobs from bucket-index",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "transform": "table",
                  "type": "table",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "By estimated compaction jobs from bucket-index",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "10",
                  "value": "10"
               },
               "hide": 0,
               "includeAll": false,
               "label": "limit",
               "multi": false,
               "name": "limit",
               "options": [
                  {
                     "selected": true,
                     "text": "10",
                     "value": "10"
                  },
                  {
                     "selected": false,
                     "text": "50",
                     "value": "50"
                  },
                  {
                     "selected": false,
                     "text": "100",
                     "value": "100"
                  }
               ],
               "query": "10 : 10,50 : 50,100 : 100",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Top tenants",
      "uid": "bc6e12d4fe540e4a1785b9d3ca0ffdd9",
      "version": 0
   }{
      "__requires": [
         {
            "id": "grafana",
            "name": "Grafana",
            "type": "grafana",
            "version": "8.0.0"
         }
      ],
      "annotations": {
         "list": [ ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "hideControls": false,
      "links": [
         {
            "asDropdown": true,
            "icon": "external link",
            "includeVars": true,
            "keepTime": true,
            "tags": [
               "mimir"
            ],
            "targetBlank": false,
            "title": "Mimir dashboards",
            "type": "dashboards"
         }
      ],
      "refresh": "5m",
      "rows": [
         {
            "collapse": false,
            "height": "125px",
            "panels": [
               {
                  "content": "<p>\n  This dashboard shows various health metrics for the write path.\n  It is broken into sections for each service on the write path,\n  and organized by the order in which the write request flows.\n  <br/>\n  Incoming metrics data travels from the gateway → distributor → ingester.\n  <br/>\n  For each service, there are 3 panels showing\n  (1) requests per second to that service,\n  (2) average, median, and p99 latency of requests to that service, and\n  (3) p99 latency of requests to each instance of that service.\n</p>\n<p>\n  It also includes metrics for the key-value (KV) stores used to manage\n  the high-availability tracker and the ingesters.\n</p>\n",
                  "datasource": null,
                  "description": "",
                  "id": 1,
                  "mode": "markdown",
                  "span": 12,
                  "title": "",
                  "transparent": true,
                  "type": "text"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Writes dashboard description",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "100px",
            "panels": [
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 2,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(cluster_namespace_job:cortex_distributor_received_samples:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Samples / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Exemplars / sec\nThe total number of received exemplars by the distributors, excluding rejected and deduped exemplars, but not necessarily ingested by the ingesters.\n\n",
                  "fill": 1,
                  "format": "short",
                  "id": 3,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Exemplars / sec",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### In-memory series\nThe number of series not yet flushed to object storage that are held in ingester memory.\nWith classic storage we the sum of series from all ingesters is divided by the replication factor.\nWith ingest storage we take the maximum series of each ingest partition.\n\n",
                  "fill": 1,
                  "format": "short",
                  "id": 4,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_memory_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_memory_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "In-memory series",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "description": "### Exemplars in ingesters\nNumber of TSDB exemplars currently in ingesters' storage.\nWith classic storage we the sum of exemplars from all ingesters is divided by the replication factor.\nWith ingest storage we take the maximum exemplars of each ingest partition.\n\n",
                  "fill": 1,
                  "format": "short",
                  "id": 5,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cortex_ingester_tsdb_exemplar_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cortex_ingester_tsdb_exemplar_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Exemplars in ingesters",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               },
               {
                  "aliasColors": { },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fill": 1,
                  "format": "short",
                  "id": 6,
                  "legend": {
                     "avg": false,
                     "current": false,
                     "max": false,
                     "min": false,
                     "show": true,
                     "total": false,
                     "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "percentage": false,
                  "pointradius": 5,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [ ],
                  "spaceLength": 10,
                  "span": 2,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                     {
                        "expr": "count(count by(user) (cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}))",
                        "format": "time_series",
                        "instant": true,
                        "refId": "A"
                     }
                  ],
                  "thresholds": "70,80",
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Tenants",
                  "tooltip": {
                     "shared": false,
                     "sort": 0,
                     "value_type": "individual"
                  },
                  "type": "singlestat",
                  "xaxis": {
                     "buckets": null,
                     "mode": "time",
                     "name": null,
                     "show": true,
                     "values": [ ]
                  },
                  "yaxes": [
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": false,
            "title": "Headlines",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\nThe rate of successful, failed and rejected requests to distributor.\nRejected requests are requests that distributor fails to handle because of distributor instance limits.\nWhen distributor is configured to use \"early\" request rejection, then rejected requests are NOT included in other metrics.\nWhen distributor is not configured to use \"early\" request rejection, then rejected requests are also counted as \"errors\".\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 7,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 8,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.99, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_native"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_native"
                     },
                     {
                        "expr": "(1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}) /\nsum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_classic"
                     },
                     {
                        "expr": "(1e3 * sum(histogram_sum(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) /\nsum(histogram_count(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_native"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 9,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Distributor",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Requests / sec\nThe rate of successful, failed and rejected requests to ingester.\nRejected requests are requests that ingester fails to handle because of ingester instance limits (ingester-max-inflight-push-requests, ingester-max-inflight-push-requests-bytes, ingester-max-ingestion-rate).\nWhen ingester is configured to use \"early\" request rejection, then rejected requests are NOT included in other metrics.\nWhen ingester is not configured to use \"early\" request rejection, then rejected requests are also counted as \"errors\".\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 10,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(sum by (status) (\n  label_replace(label_replace(histogram_count(rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}[$__rate_interval])),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 11,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "expr": "(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.99, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "99th percentile",
                        "refId": "A_native"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_classic"
                     },
                     {
                        "expr": "(histogram_quantile(0.50, sum (cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "50th percentile",
                        "refId": "B_native"
                     },
                     {
                        "expr": "(1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}) /\nsum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})\n) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_classic"
                     },
                     {
                        "expr": "(1e3 * sum(histogram_sum(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) /\nsum(histogram_count(cluster_job_route:cortex_request_duration_seconds:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}))\n) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C_native"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 0,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 12,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "displayMode": "hidden",
                        "showLegend": false
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "desc"
                     }
                  },
                  "span": 4,
                  "targets": [
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (le,pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}[$__rate_interval])))) and on() (vector($latency_metrics) == 1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     },
                     {
                        "exemplar": true,
                        "expr": "(histogram_quantile(0.99, sum by (pod) (rate(cortex_request_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}[$__rate_interval])))) and on() (vector($latency_metrics) == -1)",
                        "format": "time_series",
                        "legendFormat": "",
                        "legendLink": null
                     }
                  ],
                  "title": "Per pod p99 latency",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Replicas\nThe minimum, maximum, and current number of distributor replicas.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/Max .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/Current .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byRegexp",
                              "options": "/Min .+/"
                           },
                           "properties": [
                              {
                                 "id": "custom.fillOpacity",
                                 "value": 0
                              },
                              {
                                 "id": "custom.lineStyle",
                                 "value": {
                                    "fill": "dash"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 13,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_max_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"}\n  # Add the scaletargetref_name label for readability\n  * on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    group by (cluster, namespace, horizontalpodautoscaler, scaletargetref_name) (kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"})\n)\n",
                        "format": "time_series",
                        "legendFormat": "Max {{ scaletargetref_name }}",
                        "legendLink": null
                     },
                     {
                        "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_status_current_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"}\n  # Add the scaletargetref_name label for readability\n  * on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    group by (cluster, namespace, horizontalpodautoscaler, scaletargetref_name) (kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"})\n)\n",
                        "format": "time_series",
                        "legendFormat": "Current {{ scaletargetref_name }}",
                        "legendLink": null
                     },
                     {
                        "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_min_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"}\n  # Add the scaletargetref_name label for readability\n  * on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    group by (cluster, namespace, horizontalpodautoscaler, scaletargetref_name) (kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"})\n)\n",
                        "format": "time_series",
                        "legendFormat": "Min {{ scaletargetref_name }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Replicas",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Scaling metric (CPU): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 14,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by (scaler) (\n  # Using `max by ()` so that series churn doesn't break the promQL join\n  max by (cluster, namespace, scaledObject, metric, scaler) (\n    label_replace(\n      keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*cpu.*\"},\n      \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n    )\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left\n    # Using `max by ()` so that series churn doesn't break the promQL join\n    max by (cluster, namespace, scaledObject, metric) (\n      label_replace(\n        label_replace(\n          kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"},\n          \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n        ),\n        \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(?:mimir-)?(.*)\"\n      )\n    )\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{ scaler }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Scaling metric (CPU): Desired replicas",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Scaling metric (memory): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 15,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by (scaler) (\n  # Using `max by ()` so that series churn doesn't break the promQL join\n  max by (cluster, namespace, scaledObject, metric, scaler) (\n    label_replace(\n      keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*memory.*\"},\n      \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n    )\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left\n    # Using `max by ()` so that series churn doesn't break the promQL join\n    max by (cluster, namespace, scaledObject, metric) (\n      label_replace(\n        label_replace(\n          kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"},\n          \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n        ),\n        \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(?:mimir-)?(.*)\"\n      )\n    )\n)\n",
                        "format": "time_series",
                        "legendFormat": "{{ scaler }}",
                        "legendLink": null
                     }
                  ],
                  "title": "Scaling metric (memory): Desired replicas",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Autoscaler failures rate\nThe rate of failures in the KEDA custom metrics API server. Whenever an error occurs, the KEDA custom\nmetrics server is unable to query the scaling metric from Prometheus so the autoscaler wouldn't work properly.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [ ]
                  },
                  "id": 16,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum by(cluster, namespace, metric, scaledObject, scaler) (\n  label_replace(\n    rate(keda_scaler_errors[$__rate_interval]),\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.+)\"\n  )\n) +\non(cluster, namespace, metric, scaledObject) group_left\n  # Using `max by ()` so that series churn doesn't break the promQL join\n  max by (cluster, namespace, metric, scaledObject) (\n    label_replace(\n      label_replace(\n          kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-(?:mimir-)?distributor\"} * 0,\n          \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(?:mimir-)?(.*)\"\n      ),\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    )\n  )\n",
                        "format": "time_series",
                        "legendFormat": "{{scaler}} failures",
                        "legendLink": null
                     }
                  ],
                  "title": "Autoscaler failures rate",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Distributor – autoscaling",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 17,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 18,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Distributor - key-value store for high-availability (HA) deduplication",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 19,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 20,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Distributor - key-value store for distributors ring",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "1xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EAB839",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "2xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "3xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#6ED0E0",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "4xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#EF843C",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "5xx"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "OK"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "cancel"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#A9A9A9",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "error"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "success"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 21,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                        "format": "time_series",
                        "legendFormat": "{{status}}",
                        "refId": "A"
                     }
                  ],
                  "title": "Requests / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 22,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester - key-value store for the ingesters ring",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Uploaded blocks / sec\nThe rate of blocks being uploaded from the ingesters\nto object storage.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 23,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_shipper_uploads_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_shipper_upload_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_shipper_upload_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Uploaded blocks / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Upload latency\nThe average, median (50th percentile), and 99th percentile time\nthe ingesters take to upload blocks to object storage.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 24,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Upload latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester – shipper",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Compactions per second\nIngesters maintain a local TSDB per-tenant on disk. Each TSDB maintains a head block for each\nactive time series; these blocks get periodically compacted (by default, every 2h).\nThis panel shows the rate of compaction operations across all TSDBs on all ingesters.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 25,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_compactions_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_compactions_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Compactions / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Compaction latency\nThe average, median (50th percentile), and 99th percentile time ingesters take to compact TSDB head blocks\non the local filesystem.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ms"
                     },
                     "overrides": [ ]
                  },
                  "id": 26,
                  "links": [ ],
                  "nullPointMode": "null as zero",
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "99th Percentile",
                        "refId": "A"
                     },
                     {
                        "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) by (le)) * 1e3",
                        "format": "time_series",
                        "legendFormat": "50th Percentile",
                        "refId": "B"
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "Average",
                        "refId": "C"
                     }
                  ],
                  "title": "Compactions latency",
                  "type": "timeseries",
                  "yaxes": [
                     {
                        "format": "ms",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": 0,
                        "show": true
                     },
                     {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": false
                     }
                  ]
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester – TSDB head",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### WAL truncations per second\nThe WAL is truncated each time a new TSDB block is written. This panel measures the rate of\ntruncations.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 27,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_wal_truncations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_tsdb_wal_truncations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_wal_truncations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "WAL truncations / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Checkpoints created per second\nCheckpoints are created as part of the WAL truncation process.\nThis metric measures the rate of checkpoint creation.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "short"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "failed"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "successful"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#7EB26D",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 28,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_checkpoint_creations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_tsdb_checkpoint_creations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "successful",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_checkpoint_creations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "failed",
                        "legendLink": null
                     }
                  ],
                  "title": "Checkpoints created / sec",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### WAL truncations latency (including checkpointing)\nAverage time taken to perform a full WAL truncation,\nincluding the time taken for the checkpointing to complete.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "noValue": "0",
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "s"
                     },
                     "overrides": [ ]
                  },
                  "id": 29,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_wal_truncate_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_ingester_tsdb_wal_truncate_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) >= 0\n",
                        "format": "time_series",
                        "legendFormat": "avg",
                        "legendLink": null
                     }
                  ],
                  "title": "WAL truncations latency (includes checkpointing)",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 100,
                           "lineWidth": 0,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "normal"
                           }
                        },
                        "min": 0,
                        "noValue": "0",
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ops"
                     },
                     "overrides": [
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "WAL"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E24D42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        },
                        {
                           "matcher": {
                              "id": "byName",
                              "options": "mmap-ed chunks"
                           },
                           "properties": [
                              {
                                 "id": "color",
                                 "value": {
                                    "fixedColor": "#E28A42",
                                    "mode": "fixed"
                                 }
                              }
                           ]
                        }
                     ]
                  },
                  "id": 30,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_wal_corruptions_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "WAL",
                        "legendLink": null
                     },
                     {
                        "expr": "sum(rate(cortex_ingester_tsdb_mmap_chunk_corruptions_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "mmap-ed chunks",
                        "legendLink": null
                     }
                  ],
                  "title": "Corruptions / sec",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Ingester – TSDB write ahead log (WAL)",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "description": "### Distributor exemplars incoming rate\nThe rate of exemplars that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ex/s"
                     },
                     "overrides": [ ]
                  },
                  "id": 31,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(cluster_namespace_job:cortex_distributor_exemplars_in:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "legendFormat": "incoming exemplars",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor exemplars incoming rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Distributor exemplars received rate\nThe rate of received exemplars, excluding rejected and deduped exemplars.\nThis number can be sensibly lower than incoming rate because we dedupe the HA sent exemplars, and then reject based on time, see `cortex_discarded_exemplars_total` for specific reasons rates.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ex/s"
                     },
                     "overrides": [ ]
                  },
                  "id": 32,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                        "format": "time_series",
                        "legendFormat": "received exemplars",
                        "legendLink": null
                     }
                  ],
                  "title": "Distributor exemplars received rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Ingester ingested exemplars rate\nThe rate of exemplars ingested in the ingesters.\nEvery exemplar is replicated to a number of ingesters. With classic storage we the sum of rates from all ingesters is divided by the replication factor.\nWith ingest storage we take the maximum rate of each ingest partition.\nThis ingested exemplars rate should match the distributor's received exemplars rate.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ex/s"
                     },
                     "overrides": [ ]
                  },
                  "id": 33,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cluster_namespace_job:cortex_ingester_ingested_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cluster_namespace_job:cortex_ingester_ingested_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "ingested exemplars",
                        "legendLink": null
                     }
                  ],
                  "title": "Ingester ingested exemplars rate",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "description": "### Ingester appended exemplars rate\nThe rate of exemplars appended in the ingesters.\nThis can be lower than ingested exemplars rate since TSDB does not append the same exemplar twice, and those can be frequent.\n\n",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "ex/s"
                     },
                     "overrides": [ ]
                  },
                  "id": 34,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 3,
                  "targets": [
                     {
                        "expr": "( # Classic storage\n  sum by (cluster, namespace, ) (\n    cluster_namespace_job:cortex_ingester_tsdb_exemplar_exemplars_appended:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} unless on (job)\n    cortex_partition_ring_partitions{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  )\n  / on (cluster, namespace) group_left()\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\nor\n( # Ingest storage\n  sum by (cluster, namespace, ) (\n    max by (ingester_id, cluster, namespace, ) (\n      label_replace(\n        cluster_namespace_job:cortex_ingester_tsdb_exemplar_exemplars_appended:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"},\n        \"ingester_id\", \"$1\", \"pod\", \".*-([0-9]+)$\"\n      )\n    )\n  )\n)\n",
                        "format": "time_series",
                        "legendFormat": "appended exemplars",
                        "legendLink": null
                     }
                  ],
                  "title": "Ingester appended exemplars rate",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "Exemplars",
            "titleSize": "h6"
         },
         {
            "collapse": false,
            "height": "250px",
            "panels": [
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 35,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (reason) (rate(cortex_distributor_instance_rejected_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{reason}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Rejected distributor requests",
                  "type": "timeseries"
               },
               {
                  "datasource": "$datasource",
                  "fieldConfig": {
                     "defaults": {
                        "custom": {
                           "drawStyle": "line",
                           "fillOpacity": 1,
                           "lineWidth": 1,
                           "pointSize": 5,
                           "showPoints": "never",
                           "spanNulls": false,
                           "stacking": {
                              "group": "A",
                              "mode": "none"
                           }
                        },
                        "min": 0,
                        "thresholds": {
                           "mode": "absolute",
                           "steps": [ ]
                        },
                        "unit": "reqps"
                     },
                     "overrides": [ ]
                  },
                  "id": 36,
                  "links": [ ],
                  "options": {
                     "legend": {
                        "showLegend": true
                     },
                     "tooltip": {
                        "mode": "multi",
                        "sort": "none"
                     }
                  },
                  "span": 6,
                  "targets": [
                     {
                        "expr": "sum by (reason) (rate(cortex_ingester_instance_rejected_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                        "format": "time_series",
                        "legendFormat": "{{reason}}",
                        "legendLink": null
                     }
                  ],
                  "title": "Rejected ingester requests",
                  "type": "timeseries"
               }
            ],
            "repeat": null,
            "repeatIteration": null,
            "repeatRowId": null,
            "showTitle": true,
            "title": "",
            "titleSize": "h6"
         }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
         "mimir"
      ],
      "templating": {
         "list": [
            {
               "current": {
                  "text": "default",
                  "value": "default"
               },
               "hide": 0,
               "label": "Data source",
               "name": "datasource",
               "options": [ ],
               "query": "prometheus",
               "refresh": 1,
               "regex": "",
               "type": "datasource"
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": true,
               "label": "cluster",
               "multi": true,
               "name": "cluster",
               "options": [ ],
               "query": "label_values(cortex_build_info, cluster)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "allValue": ".+",
               "current": {
                  "selected": true,
                  "text": "All",
                  "value": "$__all"
               },
               "datasource": "$datasource",
               "hide": 0,
               "includeAll": false,
               "label": "namespace",
               "multi": true,
               "name": "namespace",
               "options": [ ],
               "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
               "refresh": 1,
               "regex": "",
               "sort": 1,
               "tagValuesQuery": "",
               "tags": [ ],
               "tagsQuery": "",
               "type": "query",
               "useTags": false
            },
            {
               "current": {
                  "selected": true,
                  "text": "classic",
                  "value": "1"
               },
               "description": "Choose between showing latencies based on low precision classic or high precision native histogram metrics.",
               "hide": 0,
               "includeAll": false,
               "label": "Latency metrics",
               "multi": false,
               "name": "latency_metrics",
               "options": [
                  {
                     "selected": false,
                     "text": "native",
                     "value": "-1"
                  },
                  {
                     "selected": true,
                     "text": "classic",
                     "value": "1"
                  }
               ],
               "query": "native : -1,classic : 1",
               "skipUrlSync": false,
               "type": "custom",
               "useTags": false
            }
         ]
      },
      "time": {
         "from": "now-1h",
         "to": "now"
      },
      "timepicker": {
         "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
         ],
         "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
         ]
      },
      "timezone": "utc",
      "title": "Mimir / Writes",
      "uid": "8280707b8f16e7b87b840fc1cc92d4c5",
      "version": 0
   }